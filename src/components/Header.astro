---
import UserProfile from "@/components/UserProfile.svelte";
import LogoImage from "@/components/LogoImage.astro";
import {Button} from "@/components/primitives/button";
import {getLocaleFromUrl, useTranslations, localizeUrl} from "@/i18n/utils";

export interface Props {
  pathname: string;
}

const {pathname} = Astro.props;
const user = Astro.locals.user;
const locale = getLocaleFromUrl(pathname);
const t = useTranslations(locale);

// Create locale-aware URLs
const homeUrl = localizeUrl("/", locale);
const signInUrl = localizeUrl("/sign-in", locale);
const dashboardUrl = localizeUrl("/dashboard", locale);
const accountUrl = localizeUrl("/account", locale);
---

<header
  class="from-seagull-50/80 dark:from-seagull-900/20 bg-gradient-to-b to-transparent"
>
  <nav
    class="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8"
    aria-label="Global"
  >
    <div class="flex lg:flex-1">
      <a href={homeUrl} class="-m-1.5 p-1.5">
        <span class="sr-only">Indigo Stack CE</span>
        <LogoImage class="p-2" />
      </a>
    </div>
    <div class="flex lg:hidden">
      <button
        type="button"
        class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 dark:text-gray-200"
        id="mobile-menu-toggle"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
      </button>
    </div>
    <div class="hidden lg:flex lg:gap-x-12">
      {
        user ? (
          <UserProfile
            name={user.name}
            imageUrl={user.image}
            locale={locale}
            client:load
          />
        ) : (
          <Button href={signInUrl} size="sm" client:load>
            {t.nav.signin}
          </Button>
        )
      }
    </div>
  </nav>

  <!-- Mobile menu, show/hide based on menu open state. -->
  <div
    class="hidden lg:hidden"
    role="dialog"
    aria-modal="true"
    id="mobile-menu"
  >
    <!-- Background backdrop, show/hide based on slide-over state. -->
    <div class="fixed inset-0 z-10"></div>
    <div
      class="fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10 dark:bg-gray-900 dark:sm:ring-gray-800"
    >
      <div class="flex items-center justify-between">
        <a href={homeUrl} class="-m-1.5 p-1.5">
          <span class="sr-only">Indigo Stack CE</span>
          <LogoImage class="p-2" />
        </a>
        <button
          type="button"
          class="-m-2.5 rounded-md p-2.5 text-gray-700 dark:text-gray-300"
          id="mobile-menu-close"
        >
          <span class="sr-only">Close menu</span>
          <svg
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-gray-500/10 dark:divide-gray-700">
          <div class="space-y-2 py-6">
            {
              user ? (
                <>
                  <div class="border-border border-b py-2">
                    <a
                      href={dashboardUrl}
                      class="-mx-3 block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50 dark:text-white dark:hover:bg-gray-800"
                    >
                      {t.nav.dashboard}
                    </a>
                  </div>
                  <div class="border-border border-b py-2">
                    <a
                      href={accountUrl}
                      class="-mx-3 block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50 dark:text-white dark:hover:bg-gray-800"
                    >
                      {t.nav.account}
                    </a>
                  </div>

                  <button
                    class="-mx-3 block w-full rounded-lg px-3 py-2.5 text-left text-base/7 font-semibold text-red-500 hover:bg-gray-50 dark:text-red-400 dark:hover:bg-gray-800"
                    onclick="document.querySelector('form[action=\'/api/auth/sign-out\']').submit()"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      stroke="currentColor"
                      class="mr-1 inline-block h-5 w-5"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M15.75 9V5.25A2.25 2.25 0 0 0 13.5 3h-6a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h6a2.25 2.25 0 0 0 2.25-2.25V15M12 9l-3 3m0 0 3 3m-3-3h12.75"
                        stroke-linejoin="round"
                      />
                    </svg>
                    {t.nav.signout}
                  </button>
                </>
              ) : (
                <div>
                  <Button href={signInUrl} class="w-full" client:load>
                    {t.nav.signin}
                  </Button>
                </div>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<form method="post" action="/api/auth/sign-out" class="hidden"></form>

<script>
  // Initialize mobile menu toggle
  const mobileMenuToggle = document.getElementById("mobile-menu-toggle");
  const mobileMenuClose = document.getElementById("mobile-menu-close");
  const mobileMenu = document.getElementById("mobile-menu");

  if (mobileMenuToggle && mobileMenuClose && mobileMenu) {
    mobileMenuToggle.addEventListener("click", () => {
      mobileMenu.classList.remove("hidden");
    });

    mobileMenuClose.addEventListener("click", () => {
      mobileMenu.classList.add("hidden");
    });
  }
</script>
