---
import {
  getLocaleFromParams,
  useTranslationsFromParams,
  localizeUrl
} from "@/i18n/utils";
import Layout from "@/layouts/Layout.astro";
import {Button} from "@/components/ui/button";
import {actions} from "astro:actions";

const locale = getLocaleFromParams(Astro.params);
const t = useTranslationsFromParams(Astro.params);

// Check if user is authenticated and email is already verified
if (Astro.locals.user?.id && Astro.locals.user?.emailVerified) {
  return Astro.redirect(localizeUrl("/dashboard", locale));
}

let email = "";
let isAuthenticated = false;
let successMessage = "";
let shouldProcessPost = false;

// Check for authenticated user first
if (Astro.locals.user?.id) {
  isAuthenticated = true;
  email = Astro.locals.user.email;
} else {
  // Fall back to cookies for unauthenticated users
  email = Astro.cookies.get("verify-email")?.value || "";
}

// Handle POST request before redirect check
if (Astro.request.method === "POST") {
  shouldProcessPost = true;
  
  if (!email) {
    // Try to get email from form data for POST
    const formData = await Astro.request.formData();
    email = formData.get("email")?.toString() || "";
  }
}

// Only redirect if no email AND not processing a POST
if (!email && !shouldProcessPost) {
  return Astro.redirect(localizeUrl("/sign-in", locale));
}

// Clear cookies only after we're sure we don't need them
if (!isAuthenticated && email) {
  Astro.cookies.delete("verify-email");
  Astro.cookies.delete("verify-name");
}

const errors = {
  server: ""
};

if (shouldProcessPost) {
  const {error, data} = await Astro.callAction(
    actions.authentication.resendVerificationEmail,
    {
      email: email
    }
  );

  if (error) {
    errors.server = t.auth.resendVerificationError;
  } else if (data?.success) {
    successMessage = "Email sent successfully!";
  }
}
---

<Layout>
  <div class="container mx-auto max-w-2xl px-4 py-8">
    <div class="bg-card rounded-lg p-6 shadow-sm">
      <h1 class="mb-4 text-2xl font-bold">{t.auth.verifyEmail}</h1>

      <p class="text-muted-foreground mb-6">
        {t.auth.verifyDescription}
        <strong>{email}</strong>. {t.auth.verifyInstruction}
      </p>

      <div>
        {
          errors.server && (
            <p class="ml-2 text-xs text-red-500" id="error">
              {errors.server}
            </p>
          )
        }

        {
          successMessage ? (
            <div class="mb-4 rounded-md bg-green-50 p-4 text-green-700 dark:bg-green-950 dark:text-green-300">
              âœ… {successMessage}
            </div>
          ) : (
            <form method="POST">
              <input type="hidden" name="email" value={email} />
              <Button type="submit" variant="default" size="lg" >
                {t.auth.resendVerification}
              </Button>
            </form>
          )
        }
      </div>

      <p class="text-muted-foreground mt-6 text-sm">
        {t.auth.didntReceiveEmail}
        {t.auth.tryAgain}
      </p>
    </div>
  </div>
</Layout>
