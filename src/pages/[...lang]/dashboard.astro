---
import Welcome from "@/components/Welcome.astro";
import Layout from "@/layouts/Layout.astro";
import "@/styles.css";
import {Button} from "@/components/ui/button";
import {DeleteConfirmation} from "@/components/DeleteConfirmation.tsx";
import {
  getLocaleFromParams,
  useTranslationsFromParams,
  localizeUrl
} from "@/i18n/utils";

const locale = getLocaleFromParams(Astro.params);
const t = useTranslationsFromParams(Astro.params);

if (!Astro.locals.user?.id) {
  return Astro.redirect(localizeUrl("/sign-in", locale));
}

const user = Astro.locals.user;
const accountUrl = localizeUrl("/account", locale);
const emailDemoUrl = localizeUrl("/email-demo", locale);
const verifyEmailUrl = localizeUrl("/verify-email", locale);
---

<Layout title={t.nav.dashboard}>
  <div class="dashboard mx-auto max-w-4xl p-6 pt-20">
    <h1 class="text-foreground mb-4 text-2xl font-bold">
      {t.nav.dashboard}
    </h1>

    {
      !user.emailVerified && (
        <div class="mb-4 flex items-center justify-between rounded-lg bg-orange-100 px-2 py-2 dark:bg-yellow-900">
          <p class="ml-2 text-sm text-orange-900 dark:text-yellow-100">
            {locale === "ja" ? "メール" : "Email"} <strong>{user.email}</strong>{" "}
            {locale === "ja" ? "は確認されていません" : "is not verified"}
          </p>
          <Button asChild variant="outline" size="sm">
            <a href={verifyEmailUrl}>{t.dashboard.noEmailReceived}</a>
          </Button>
        </div>
      )
    }

    <Welcome user={user} locale={locale} />
    <div class="flex flex-wrap items-center gap-4">
      <Button asChild variant="outline" size="sm">
        <a href={accountUrl}>{t.nav.account}</a>
      </Button>
      <Button asChild variant="outline" size="sm">
        <a href={emailDemoUrl}>{t.dashboard.emailDemo}</a>
      </Button>
      <DeleteConfirmation  locale={locale} />
    </div>
  </div>
</Layout>
