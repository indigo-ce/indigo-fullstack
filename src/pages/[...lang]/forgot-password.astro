---
import Layout from "@/layouts/Layout.astro";
import {Button} from "@/components/ui/button";
import {IconInputField} from "@/components/IconInputField.tsx";
import ErrorMessage from "@/components/ErrorMessage.astro";
import {createAuth} from "@/lib/auth";
import {APIError} from "better-auth/api";
import {
  getLocaleFromParams,
  localizeUrl,
  useTranslationsFromParams
} from "@/i18n/utils";
import {z} from "astro:schema";

const locale = getLocaleFromParams(Astro.params);
const t = useTranslationsFromParams(Astro.params);

if (Astro.locals.user?.id) return Astro.redirect(localizeUrl("/", locale));

const errors = {
  email: "",
  server: ""
};

const fields = {
  email: ""
};

let emailSent = false;

const formSchema = z.object({
  email: z.string().email()
});

if (Astro.request.method === "POST") {
  const auth = createAuth(Astro.locals.runtime.env);
  const formData = await Astro.request.formData();
  const email = formData.get("email") as string;
  fields.email = email;

  const result = formSchema.safeParse({email});

  if (!result.success) {
    errors.email = result.error.message;
    return;
  }

  try {
    const response = await auth.api.forgetPassword({
      body: {
        email,
        redirectTo: localizeUrl("/reset-password", locale)
      }
    });

    if (response.status) {
      emailSent = true;
    } else {
      throw new APIError("BAD_REQUEST");
    }
  } catch (error) {
    if (error instanceof APIError) {
      errors.server = t.auth.somethingWentWrong;
    } else {
      errors.server = t.auth.somethingWentWrong;
    }
  }
}

const signInUrl = localizeUrl("/sign-in", locale);
---

<Layout title={t.auth.resetPassword}>
  <div
    class="flex min-h-[70dvh] w-full flex-col items-center justify-center py-12"
  >
    <div class="w-full max-w-xs">
      <h1 class="mb-8 text-center text-2xl font-bold">
        {emailSent ? t.auth.checkEmail : t.auth.resetPassword}
      </h1>
      {
        emailSent ? (
          <p class="mt-4 text-center text-sm">
            {t.auth.resetEmailSent}
            <br />
            {t.auth.resetInstruction}
          </p>
        ) : (
          <form method="POST" class="space-y-4">
            <ErrorMessage message={errors.server || errors.email} />

            <IconInputField
              type="email"
              placeholder={t.auth.email}
              name="email"
              required
              defaultValue={fields.email}
              iconName="Mail"
              client:load
            />

            <Button type="submit" className="mt-4 w-full">
              {t.auth.resetLink}
            </Button>

            <p class="mt-4 text-center text-sm">
              {t.auth.alreadyHaveAccount}{" "}
              <a href={signInUrl} class="text-primary underline">
                {t.auth.signinHere}
              </a>
            </p>
          </form>
        )
      }
    </div>
  </div>
</Layout>
